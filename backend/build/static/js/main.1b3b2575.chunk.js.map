{"version":3,"sources":["containers/Home.js","actions/actionType.js","actions/action.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","components/Navbar.js","hocs/Layout.js","App.js","reportWebVitals.js","reducers/reducer.js","reducers/index.js","store.js","index.js"],"names":["Home","className","class","to","role","LOGIN_SUCCESS","LOGIN_FAIL","LOAD_USER_SUCCESS","LOAD_USER_FAIL","AUTHENTICATED_SUCCESS","AUTEHNTICATED_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","load_user","dispatch","a","localStorage","getItem","console","log","config","headers","axios","get","process","res","type","actionType","payload","data","connect","state","isAuthenticated","reducer","login","email","password","body","JSON","stringify","post","actions","props","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","signup","re_password","accountCreated","setAccountCreated","verify","uid","token","match","verified","setVerified","style","marginTop","onClick","params","reset_password","requestSent","setRequestSent","objects","reset_password_confirm","new_password","re_new_password","logout","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","checkAuthenticated","useEffect","children","App","exact","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","access","refresh","user","action","setItem","combineReducers","middelware","thunk","store","createStore","composeWithDevTools","applyMiddleware","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b3b2575.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nconst Home = () => (\r\n    <div className='container'>\r\n        <div class=\"jumbotron mt-5\">\r\n        <h1 class=\"display-4\">Welcome</h1>\r\n        <p class=\"lead\">This is authentication system.</p>\r\n        <hr class=\"my-4\"/>\r\n        <p>Click the login button</p>\r\n        <Link class=\"btn btn-primary btn-lg\" to='/login' role=\"button\">Login</Link>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Home","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\r\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS'\r\nexport const AUTEHNTICATED_FAIL = 'AUTHENTICATED_FAIL'\r\nexport const PASSWORD_RESET_SUCCESS = 'AUTHENTICATED_SUCCESS'\r\nexport const PASSWORD_RESET_FAIL = 'AUTHENTICATED_FAIL'\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'AUTHENTICATED_SUCCESS'\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'AUTHENTICATED_FAIL'\r\nexport const LOG_OUT = 'LOG_OUT'\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL'\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS'\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL'","import * as actionType from './actionType'\r\nimport axios from 'axios'\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        console.log(`JWT ${localStorage.getItem('access')}`)\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n        try {\r\n            // use shift and @ instead of shift and 7\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config)\r\n            dispatch({\r\n                type: actionType.LOAD_USER_SUCCESS,\r\n                payload: res.data})\r\n        } catch (err) {\r\n        dispatch({\r\n                type: actionType.LOAD_USER_FAIL})\r\n        }\r\n    } else {\r\n        console.log('no access')\r\n        dispatch({\r\n            type: actionType.LOAD_USER_FAIL})\r\n    }\r\n}\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({email, password})\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config)\r\n        dispatch({\r\n            type: actionType.LOGIN_SUCCESS,\r\n            payload: res.data})\r\n\r\n        dispatch(load_user())\r\n    } catch (err) {\r\n        dispatch({\r\n            type: actionType.LOGIN_FAIL})\r\n    }\r\n}\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n        const body = JSON.stringify({ token: localStorage.getItem('access')})\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\r\n\r\n            if (res !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: actionType.AUTHENTICATED_SUCCESS\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: actionType.AUTEHNTICATED_FAIL\r\n            })\r\n        }\r\n            \r\n        } catch(err) {\r\n            dispatch({\r\n                type: actionType.AUTEHNTICATED_FAIL\r\n            })\r\n        }\r\n        \r\n    } else {\r\n        dispatch({\r\n            type: actionType.AUTEHNTICATED_FAIL\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: actionType.LOG_OUT\r\n    })\r\n}\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({email})\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config)\r\n        console.log('PASSWORD_RESET')\r\n        dispatch({\r\n            type: actionType.PASSWORD_RESET_SUCCESS,\r\n            payload: res.data})\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: actionType.PASSWORD_RESET_FAIL})\r\n    }\r\n}\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({uid, token, new_password, re_new_password})\r\n    console.log('PASSWORD_RESET_CONFIRM')\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config)\r\n        dispatch({\r\n            type: actionType.PASSWORD_RESET_CONFIRM_SUCCESS})\r\n    } catch (err) {\r\n        dispatch({\r\n            type: actionType.PASSWORD_RESET_CONFIRM_FAIL})\r\n    }\r\n}\r\n\r\nexport const signup = (name, email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({name, email, password, re_password})\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config)\r\n        dispatch({\r\n            type: actionType.SIGNUP_SUCCESS,\r\n            payload: res.data})\r\n    } catch (err) {\r\n        dispatch({\r\n            type: actionType.SIGNUP_FAIL})\r\n    }\r\n}\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({uid, token})\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config)\r\n        dispatch({\r\n            type: actionType.ACTIVATION_SUCCESS,\r\n            payload: res.data})\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: actionType.ACTIVATION_FAIL})\r\n    }\r\n}","import React, { useState }from 'react'\r\nimport {Link, Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../actions/action'\r\n\r\nconst Login = (props) => {\r\n    const [formData, setFormData] = useState({\r\n        email:'',\r\n        password:''\r\n    })\r\n    const {email, password} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        props.login(email, password)\r\n    }\r\n    if (props.isAuthenticated) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    return (\r\n    <div className='eontainer mt-5'>\r\n        <h1>Sign in</h1>\r\n        <p1>Sign into your Account</p1>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='email'\r\n                placeholder='Email'\r\n                name='email'\r\n                value={email}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='password'\r\n                placeholder='Password'\r\n                name='password'\r\n                value={password}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <button className='btn btn-primary' type='submit'>Login</button>\r\n        </form>\r\n        <p className='mt-3'>\r\n            Don't have an account? <Link to='/signup'>Sign up</Link>\r\n        </p>\r\n        <p className='mt-3'>\r\n            Forget your password? <Link to='/reset_password'>Reset Password</Link>\r\n        </p>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapstateToProps = state => {\r\n    return {\r\n    isAuthenticated: state.reducer.isAuthenticated\r\n}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login : (email, password) => dispatch(actions.login(email, password))\r\n    }\r\n}\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(Login)","import React, { useState }from 'react'\r\nimport {Link, Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../actions/action'\r\n\r\nconst Signup = (props) => {\r\n    const [accountCreated, setAccountCreated] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email:'',\r\n        password:'',\r\n        re_password: ''\r\n    })\r\n\r\n    const {name, email, password, re_password} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        props.signup(name, email, password, re_password)\r\n        setAccountCreated(true)\r\n    }\r\n    if (props.isAuthenticated) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    if (accountCreated) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    return (\r\n    <div className='eontainer mt-5'>\r\n        <h1>Sign up</h1>\r\n        <p1>Create your Account</p1>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='name'\r\n                placeholder='name'\r\n                name='name'\r\n                value={name}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='email'\r\n                placeholder='Email*'\r\n                name='email'\r\n                value={email}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='password'\r\n                placeholder='Password*'\r\n                name='password'\r\n                value={password}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='password'\r\n                placeholder='Confirm Password*'\r\n                name='re_password'\r\n                value={re_password}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <button className='btn btn-primary' type='submit'>Sign up</button>\r\n        </form>\r\n        <p className='mt-3'>\r\n            Already have an account? <Link to='/login'>Log in</Link>\r\n        </p>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapstateToProps = state => ({\r\n    isAuthenticated: state.reducer.isAuthenticated\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signup : (name, email, password, re_password) => dispatch(actions.signup(name, email, password, re_password))\r\n    }\r\n}\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(Signup)","import React, { useState }from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../actions/action'\r\n\r\nconst Activate = (match, props) => {\r\n    const [verified, setVerified] = useState(false)\r\n    const verify_account = e => {\r\n        const uid = match.params.uid\r\n        const token = match.params.uid\r\n        props.verify(uid, token)\r\n        setVerified(true)\r\n    }\r\n    if (verified) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    return (\r\n    <div className='eontainer mt-5'>\r\n        <div className='d-flex flex-column justify-content-center align-items-center'\r\n        style={{ marginTop: '200px'}}>\r\n            <h1>Verify your account:</h1>\r\n            <button onClick={verify_account}\r\n            style={{marginTop: '50px'}}\r\n            type='button'\r\n            className='btn btn-primary'>Verify</button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapstateToProps = state => {\r\n    return {\r\n    isAuthenticated: state.reducer.isAuthenticated\r\n}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        verify : (uid, token) => dispatch(actions.verify(uid, token))\r\n    }\r\n}\r\nexport default connect(mapstateToProps, mapDispatchToProps)(Activate)","import React, { useState }from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../actions/action'\r\n\r\nconst ResetPassword = (props) => {\r\n    const [requestSent, setRequestSent] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        email:'',\r\n    })\r\n    const {email} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        props.reset_password(email)\r\n        setRequestSent(true)\r\n    }\r\n    if (requestSent) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    return (\r\n    <div className='eontainer mt-5'>\r\n        <h1>Request Password Reset</h1>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='email'\r\n                placeholder='Email'\r\n                name='email'\r\n                value={email}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        reset_password: (email) => dispatch(actions.reset_password(email),)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(ResetPassword)","import React, { useState }from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../actions/action'\r\n\r\nconst ResetPasswordConfirm = (props) => {\r\n    const [requestSent, setRequestSent] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        new_password:'',\r\n        re_new_password:''\r\n    })\r\n    console.log('token::', props.token)\r\n    const {new_password, re_new_password} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        const uid = props.uid\r\n        const token = props.token\r\n        props.reset_password_confirm(uid, token, new_password, re_new_password)\r\n        setRequestSent(true)\r\n    }\r\n    if (requestSent) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    return (\r\n    <div className='eontainer mt-5'>\r\n        <h1>Request Password Reset</h1>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='password'\r\n                placeholder='New Pasword'\r\n                name='new_password'\r\n                value={new_password}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='password'\r\n                placeholder='Confirm New Password'\r\n                name='re_new_password'\r\n                value={re_new_password}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <button className='btn btn-primary' type='submit'>ResetPasswordConfirm</button>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\nconst mapstateToProps = (state, objects) => {\r\n    return {\r\n        uid: objects.match.params.uid,\r\n        token: objects.match.params.token,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        reset_password_confirm: (uid, token, new_password, re_new_password) => dispatch(actions.reset_password_confirm(uid, token, new_password, re_new_password),)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(ResetPasswordConfirm)","import { Link } from 'react-router-dom'\r\nimport React, {Fragment} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/action'\r\nconst Navbar = (props) => {\r\n    const guestLinks = () => (\r\n        <Fragment>\r\n            <li class=\"nav-item active\">\r\n                <Link class=\"nav-link\" to='/login'>Login</Link>\r\n            </li>\r\n            <li class=\"nav-item active\">\r\n                <Link class=\"nav-link\" to='/signup'>Signup</Link>\r\n            </li>\r\n        </Fragment>\r\n    )\r\n    const authLinks = () => (\r\n        <li class=\"nav-item active\">\r\n        <Link class=\"nav-link\" to='/' onClick={props.logout}>Logout<span class=\"sr-only\">(current)</span></Link>\r\n    </li>\r\n    )\r\n\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link class=\"navbar-brand\" to=\"/\">Auth System</Link>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul class=\"navbar-nav\">\r\n            <li class=\"nav-item active\">\r\n            <Link class=\"nav-link\" to='/'>Home<span class=\"sr-only\">(current)</span></Link>\r\n            </li>\r\n            {props.isAuthenticated ? authLinks(): guestLinks()}  \r\n            </ul>\r\n        </div>\r\n        </nav>\r\n        )\r\n    }\r\n\r\n    const mapstateToProps = state => {\r\n        return {\r\n        isAuthenticated: state.reducer.isAuthenticated\r\n    }}\r\n\r\n    const mapDispatchToProps = dispatch => {\r\n        return {\r\n            logout: () => dispatch(actions.logout()),\r\n        }\r\n    }\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(Navbar)","import React, {useEffect }from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/action'\r\nconst Layout = (props) => {\r\n    useEffect(() => {\r\n        props.checkAuthenticated()\r\n        props.load_user()\r\n    }, [])\r\n    return (\r\n    <div>\r\n        <Navbar/>\r\n        {props.children}\r\n    </div>\r\n)\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        checkAuthenticated: () => dispatch(actions.checkAuthenticated()),\r\n        load_user: () => dispatch(actions.load_user())\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(Layout)","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from './containers/Home'\nimport Login from './containers/Login'\nimport Signup from './containers/Signup'\nimport Activate from './containers/Activate'\nimport ResetPassword from './containers/ResetPassword'\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm'\nimport Layout from './hocs/Layout'\n\n\nfunction App() {\n  return (\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/login' component={Login} />\n            <Route exact path='/signup' component={Signup} />\n            <Route exact path='/reset_password' component={ResetPassword} />\n            <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\n            <Route exact path='/activate/:uid/:token' component={Activate} />\n          </Switch>\n        </Layout>\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionType from '../actions/actionType'\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n}\r\n\r\nfunction reducer(state = initialState, action)  {\r\n    const {type, payload } = action\r\n\r\n    switch(type) {\r\n        case actionType.LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access)\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n\r\n        \r\n        case actionType.LOGIN_FAIL:\r\n        case actionType.SIGNUP_FAIL:\r\n            //localStorage.removeItem('access', payload.access)\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null     \r\n            }\r\n            \r\n        case actionType.LOAD_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload.user\r\n            }\r\n        \r\n        case actionType.LOAD_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n\r\n        case actionType.AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        \r\n        case actionType.AUTEHNTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n\r\n        case actionType.SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case actionType.PASSWORD_RESET_SUCCESS:\r\n        case actionType.PASSWORD_RESET_FAIL:\r\n        case actionType.PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case actionType.PASSWORD_RESET_CONFIRM_FAIL:\r\n        case actionType.ACTIVATION_FAIL:\r\n        case actionType.ACTIVATION_SUCCESS:\r\n            return {\r\n                ...state\r\n            }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default reducer\r\n","import { combineReducers } from 'redux'\r\nimport reducer from './reducer'\r\n\r\nexport default combineReducers({\r\n    reducer\r\n})\r\n\r\n//you don't have to make this","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './reducers/index'\r\n\r\nconst initialState = []\r\nconst middelware = [thunk]\r\nconst store = createStore(\r\n    reducer,\r\n    //initialState,\r\n    composeWithDevTools(applyMiddleware(...middelware))\r\n)\r\n\r\nexport default store","import React from 'react';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom';\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nconst app = (\n  <Provider store={store}>\n      <App />\n  </Provider>\n)\n\n\nReactDOM.render(app, document.getElementById(\"root\"));\nreportWebVitals();\n"],"sourceRoot":""}